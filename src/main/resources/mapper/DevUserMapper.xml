<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jhx.projectd.mapper.DevUserMapper">
  <resultMap id="BaseResultMap" type="com.jhx.projectd.entity.DevUser">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="devName" jdbcType="VARCHAR" property="devName" />
    <result column="devPassword" jdbcType="VARCHAR" property="devPassword" />
    <result column="devEmail" jdbcType="VARCHAR" property="devEmail" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
    <result column="update_time" jdbcType="TIMESTAMP" property="update_time" />
    <result column="devCode" jdbcType="INTEGER" property="devCode" />
    <result column="devInfo" jdbcType="VARCHAR" property="devInfo" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from dev_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jhx.projectd.entity.DevUser">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into dev_user (devName, devPassword, devEmail, 
      create_time, update_time, devCode, 
      devInfo)
    values (#{devName,jdbcType=VARCHAR}, #{devPassword,jdbcType=VARCHAR}, #{devEmail,jdbcType=VARCHAR}, 
      now(),now(), #{devCode,jdbcType=INTEGER},
      #{devInfo,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.jhx.projectd.entity.DevUser">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update dev_user
    set devName = #{devName,jdbcType=VARCHAR},
      devPassword = #{devPassword,jdbcType=VARCHAR},
      devEmail = #{devEmail,jdbcType=VARCHAR},
      update_time = now(),
      devCode = #{devCode,jdbcType=INTEGER},
      devInfo = #{devInfo,jdbcType=VARCHAR},
      status=#{status}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select *
    from dev_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByDevCode" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select *
    from dev_user
    where devCode = #{code,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, devName, devPassword, devEmail, create_time, update_time, devCode, devInfo
    from dev_user
  </select>

  <select id="selectByDevCodeAndPassword" resultMap="BaseResultMap">
    select * from dev_user where devCode = '${devCode}' and devPassword = '${password}'
  </select>

  <select id="selectByParam2" resultType="java.util.HashMap">
    select dev_user.id as 'id',devName,devPassword,devEmail,devInfo,dev_user.status as userstatus
    ,app_status_status.valueName as 'statusName'
    ,app_status_status.id as 'status'

    from dev_user
    left join app_status as app_status_status on dev_user.status= app_status_status.id
    <where>
      <if test="params.queryDid!=null and params.queryDid!=''">
        and dev_user.id = ${params.queryDid}
      </if>
      <if test="params.queryDevName!=null and params.queryDevName!='' ">
        and devName like '%${params.queryDevName}%'
      </if>
      <if test="params.queryDevEmail!=null and params.queryDevEmail!='' ">
        and devEmail like '%${params.queryDevEmail}%'
      </if>
      <if test="params.queryStatusId!=null and params.queryStatusId!=''">
        and dev_user.status = ${params.queryStatusId}
      </if>
    </where>
    order by dev_user.id
    desc

  </select>

  <update id="updateByDid" parameterType="java.lang.Integer" >
    update dev_user set status = ${statusAfter}
    <where>
      <if test="did!=null and did!=''">
        and id = ${did}
      </if>
    </where>
  </update>

  <update id="updateAllByDid" parameterType="java.lang.Integer"  >
    update dev_user set devName = '${params.querydevName}',
    devEmail = '${params.querydevEmail}',
    devInfo = '${params.querydevInfo}',
    update_time = now()
    <where>
      <if test="params.querydevId!=null and params.querydevId!=''">
        and id = ${params.querydevId}
      </if>
    </where>
  </update>

  <select id="selectApplyInfoByParam" resultType="java.util.HashMap">
    select dev_user.id as 'id',devName,devPassword,devEmail,devInfo,dev_user.status as userstatus
    ,app_status_status.valueName as 'statusName'
    ,app_status_status.id as 'status'
    ,dev_apply.applyInfo
    from dev_user
    left join app_status as app_status_status on dev_user.status= app_status_status.id

      left join dev_apply on dev_user.id=dev_apply.devId

    <where>
      <if test="params.queryDid!=null and params.queryDid!=''">
        and dev_user.id = ${params.queryDid}
      </if>
      <if test="params.queryDevName!=null and params.queryDevName!='' ">
        and devName like '%${params.queryDevName}%'
      </if>
      <if test="params.queryDevEmail!=null and params.queryDevEmail!='' ">
        and devEmail like '%${params.queryDevEmail}%'
      </if>
      <if test="params.queryStatusId!=null and params.queryStatusId!=''">
        and dev_user.status = ${params.queryStatusId}
      </if>
      <if test="params.queryApplyStatus!=null and params.queryApplyStatus!=''">
        and dev_apply.status = ${params.queryApplyStatus}
      </if>
    </where>
    order by dev_user.id
    desc

  </select>

</mapper>