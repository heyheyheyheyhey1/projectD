<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jhx.projectd.mapper.AppInfoMapper">
  <resultMap id="BaseResultMap" type="com.jhx.projectd.entity.AppInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="softwareName" jdbcType="VARCHAR" property="softwareName" />
    <result column="softwareSize" jdbcType="DECIMAL" property="softwareSize" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="cateLevel1" jdbcType="INTEGER" property="cateLevel1" />
    <result column="cateLevel2" jdbcType="INTEGER" property="cateLevel2" />
    <result column="APKName" jdbcType="VARCHAR" property="APKName" />
    <result column="devId" jdbcType="INTEGER" property="devId" />
    <result column="logoPicPath" jdbcType="VARCHAR" property="logoPicPath" />
    <result column="versionId" jdbcType="INTEGER" property="versionId" />
    <result column="download" jdbcType="BIGINT" property="download" />
    <result column="supportRom" jdbcType="VARCHAR" property="supportRom" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
    <result column="update_time" jdbcType="TIMESTAMP" property="update_time" />
    <result column="logoLocPath" jdbcType="VARCHAR" property="logoLocPath" />
    <result column="onSaleDate" jdbcType="TIMESTAMP" property="onSaleDate" />
    <result column="cateLevel3" jdbcType="INTEGER" property="cateLevel3" />
    <result column="flatformId" jdbcType="INTEGER" property="flatformId" />
    <result column="appInfo" jdbcType="LONGVARCHAR" property="appInfo" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from app_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jhx.projectd.entity.AppInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into app_info (softwareName, softwareSize, `status`, 
      cateLevel1, cateLevel2, APKName, 
      devId, logoPicPath, versionId, 
      download, supportRom, create_time, 
      update_time, logoLocPath, onSaleDate, 
      cateLevel3, flatformId, appInfo,interfaceLanguage
      )
    values (#{softwareName,jdbcType=VARCHAR}, #{softwareSize,jdbcType=DECIMAL}, #{status,jdbcType=INTEGER}, 
      #{cateLevel1,jdbcType=INTEGER}, #{cateLevel2,jdbcType=INTEGER}, #{APKName,jdbcType=VARCHAR}, 
      #{devId,jdbcType=INTEGER}, #{logoPicPath,jdbcType=VARCHAR}, #{versionId,jdbcType=INTEGER}, 
      #{download,jdbcType=BIGINT}, #{supportRom,jdbcType=VARCHAR},now() ,
        now(), #{logoLocPath,jdbcType=VARCHAR}, #{onSaleDate,jdbcType=TIMESTAMP},
      #{cateLevel3,jdbcType=INTEGER}, #{flatformId,jdbcType=INTEGER}, #{appInfo,jdbcType=LONGVARCHAR},#{interfaceLanguage,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.jhx.projectd.entity.AppInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update app_info
    set softwareName = #{softwareName,jdbcType=VARCHAR},
      softwareSize = #{softwareSize,jdbcType=DECIMAL},
      `status` = #{status,jdbcType=INTEGER},
      cateLevel1 = #{cateLevel1,jdbcType=INTEGER},
      cateLevel2 = #{cateLevel2,jdbcType=INTEGER},
      APKName = #{APKName,jdbcType=VARCHAR},
      devId = #{devId,jdbcType=INTEGER},
      logoPicPath = #{logoPicPath,jdbcType=VARCHAR},
      <if test="versionId!=null and versionId!=''">
        versionId = #{versionId,jdbcType=INTEGER},
      </if>
      download = #{download,jdbcType=BIGINT},
      supportRom = #{supportRom,jdbcType=VARCHAR},
      update_time = now(),
      logoLocPath = #{logoLocPath,jdbcType=VARCHAR},
      onSaleDate = #{onSaleDate,jdbcType=TIMESTAMP},
      cateLevel3 = #{cateLevel3,jdbcType=INTEGER},
      flatformId = #{flatformId,jdbcType=INTEGER},
      appInfo = #{appInfo,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateVersionIdByAppId" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update app_info
    set versionId = #{versionId,jdbcType=VARCHAR}
    where id = #{appId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, softwareName, softwareSize, `status`, cateLevel1, cateLevel2, APKName, 
    devId, logoPicPath, versionId, download, supportRom, create_time, update_time, logoLocPath, 
    onSaleDate, cateLevel3, flatformId, appInfo
    from app_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, softwareName, softwareSize, `status`, cateLevel1, cateLevel2, APKName, 
    devId, logoPicPath, versionId, download, supportRom, create_time, update_time, logoLocPath, 
    onSaleDate, cateLevel3, flatformId, appInfo
    from app_info
  </select>

  <select id="selectByAPKName" resultType="com.jhx.projectd.entity.AppInfo">
    select *
    from app_info
    where
    APKNAME = '${name}'
  </select>
  <select id="selectByParams" resultType="java.util.HashMap">

    select app_info.id,APKName,softwareSize,softwareName,download as downloads,versionNo,versionId
    ,app_status_flatform.valueName as 'flatformName'
    ,app_status_status.valueName as 'statusName'
    ,app_status_status.id as 'status'
    ,app_category1.categoryName as 'categoryLevel1Name'
    ,app_category2.categoryName as 'categoryLevel2Name'
    ,app_category3.categoryName as 'categoryLevel3Name'
    ,cateLevel1 as 'categoryLevel1'
    ,cateLevel2 as 'categoryLevel2'
    ,cateLevel3 as 'categoryLevel3'
    ,interfaceLanguage
    ,supportRom
    ,appInfo
    ,logoLocPath
    ,flatformId
    ,status
    from app_info
    left join app_status as app_status_flatform on app_info.flatformId = app_status_flatform.id
    left join app_status as app_status_status on app_info.status= app_status_status.id
    left join app_version on app_info.versionId = app_version.id
    left join app_category as app_category1 on app_info.cateLevel1 = app_category1.id
    left join app_category as app_category2 on app_info.cateLevel2 = app_category2.id
    left join app_category as app_category3 on app_info.cateLevel3 = app_category3.id
    <where>
      <if test="params.id!=null and params.id!='' ">
        and app_info.id=${params.id}
      </if>
      <if test="params.querySoftwareName!=null and params.querySoftwareName!='' ">
        and softwareName like '%${params.querySoftwareName}%'
      </if>
      <if test="params.queryStatusId!=null and params.queryStatusId!=''">
        and status = ${params.queryStatusId}
      </if>
      <if test="params.queryFlatformId!=null and params.queryFlatformId!=''">
        and flatformId = ${params.queryFlatformId}
      </if>
      <if test="params.queryCategoryLevel1Id!=null and params.queryCategoryLevel1Id!='' ">
        and cateLevel1= ${params.queryCategoryLevel1Id}
      </if>
      <if test="params.queryCategoryLevel2Id!=null and params.queryCategoryLevel2Id!='' ">
        and cateLevel2 = ${params.queryCategoryLevel2Id}
      </if>
      <if test="params.queryCategoryLevel3Id!=null and params.queryCategoryLevel3Id!=''">
        and cateLevel3= ${params.queryCategoryLevel3Id}
      </if>
      <if test="params.devId!=null and params.devId!=''">
        and devId= ${params.devId}
      </if>
        order  by app_info.id
        desc
    </where>

  </select>
  <select id="selectByParam2" resultType="java.util.HashMap">

    select app_info.id as 'id',APKName,softwareSize,softwareName,download as downloads,versionNo,versionId
    ,app_status_flatform.valueName as 'flatformName'
    ,app_status_status.valueName as 'statusName'
    ,app_status_status.id as 'status'
    ,app_category1.categoryName as 'categoryLevel1Name'
    ,app_category2.categoryName as 'categoryLevel2Name'
    ,app_category3.categoryName as 'categoryLevel3Name'
    ,interfaceLanguage
    ,supportRom as supportROM
    ,appInfo
    ,logoPicPath
    ,logoLocPath

    from app_info
    left join app_status as app_status_flatform on app_info.flatformId = app_status_flatform.id
    left join app_status as app_status_status on app_info.status= app_status_status.id
    left join app_version on app_info.versionId = app_version.id
    left join app_category as app_category1 on app_info.cateLevel1 = app_category1.id
    left join app_category as app_category2 on app_info.cateLevel2 = app_category2.id
    left join app_category as app_category3 on app_info.cateLevel3 = app_category3.id
    <where>
      <if test="params.queryAid!=null and params.queryAid!=''">
        and app_info.id = ${params.queryAid}
      </if>
      <if test="params.queryVid!=null and params.queryVid!=''">
        and versionId= ${params.queryVid}
      </if>
      order  by app_info.id
      desc
    </where>
  </select>

  <update id="updateByAidAndVid" parameterType="java.lang.Integer" >
    update app_info set status = ${status}
    <where>
      <if test="aid!=null and aid!=''">
        and id = ${aid}
      </if>
      <if test="vid!=null and vid!=''">
        and versionId  = ${vid}
      </if>
    </where>
  </update>


</mapper>